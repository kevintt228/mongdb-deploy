version: '3.8'
services:
    web:
        image: nginx:alpine
        container_name: ${NGINX_HOST}
        volumes:
            - './etc/nginx/templates:/etc/nginx/templates'
            - './etc/ssl:/etc/ssl'
            - './web:/var/www/html'
            - './run/nginx/cache:/var/cache/nginx'
            - './run/nginx/pid:/var/run'
        ports:
            - '8880:80'
        networks:
            - private
        restart: always
        env_file:
            - '.env'
        environment:
            - NGINX_HOST=${NGINX_HOST}
            - NGINX_PORT=80
        restart: always
        depends_on:
            - redis-commander
            - mongoexpress
    redis:
        image: redis:${REDIS_VERSION}
        container_name: ${REDIS_HOST}
        volumes:
            - './etc/redis/redis.conf.template:/etc/redis/default.conf.template'
            - './data/db/redis:/data'
        ports:
            - '8879:6379'
        networks:
            - private
        restart: always
        environment:
            - REDIS_PASSWORD=${REDIS_PASSWORD}
        command: /bin/sh -c "apk add --update libintl && apk add --virtual build_deps gettext && envsubst '$$REDIS_PASSWORD' < /etc/redis/default.conf.template > /etc/redis/redis.conf && redis-server /etc/redis/redis.conf"

    redis-commander:
        image: rediscommander/redis-commander:latest
        container_name: ${REDIS_COMMANDER_HOST}
        # ports:
        #     - '8881:8081'
        expose:
            - 8081
        networks:
            - private
        restart: always
        depends_on:
            - redis
        environment:
            - HTTP_USER=${HTTP_USER}
            - HTTP_PASSWORD=${HTTP_PASSWORD}
            - REDIS_HOST=${REDIS_HOST}
            - REDIS_PASSWORD=${REDIS_PASSWORD}
    mysqldb:
        image: mysql:${MYSQL_VERSION}
        container_name: ${MYSQL_HOST}
        volumes:
            - './data/db/mysql:/var/lib/mysql'
        #    - './etc/mysql/my.noroot.cnf:/etc/mysql/mysql.conf.d/noroot.cnf'
        ports:
            - '8806:3306'
        networks:
            - private
        restart: always
        env_file:
            - '.env'
        environment:
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}

    mongodb:
        image: mongo:${MONGO_VERSION}
        container_name: ${MONGO_HOST}
        volumes:
            - './data/db/mongo:/data/db'
        ports:
            - '8817:27017'
        networks:
            - private
        restart: always
        env_file:
            - '.env'
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_ADMIN}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ADMIN_PASSWORD}
            - MONGO_INITDB_DATABASE=${MONGO_DATABASE}
            - MONGO_INITDB_USER=${MONGO_USER}
            - MONGO_INITDB_PASSWORD=${MONGO_PASSWORD}

    mongoexpress:
        image: mongo-express
        container_name: ${MONGOEXPRESS_HOST}
        # ports:
        #     - '8882:8081'
        expose:
            - '8081'
        restart: always
        depends_on:
            - mongodb
        env_file:
            - '.env'
        environment:
            - ME_CONFIG_SITE_BASEURL=/mongo/
            - ME_CONFIG_BASICAUTH_USERNAME=${HTTP_USER}
            - ME_CONFIG_BASICAUTH_PASSWORD=${HTTP_PASSWORD}
            - ME_CONFIG_MONGODB_SERVER=${MONGO_HOST}
            - ME_CONFIG_MONGODB_PORT=27017
            - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
            - ME_CONFIG_MONGODB_ADMINUSERNAME=${MONGO_ADMIN}
            - ME_CONFIG_MONGODB_ADMINPASSWORD=${MONGO_ADMIN_PASSWORD}
        networks:
            - private

networks:
    private:
        external: true
        name: 'venusdev'
